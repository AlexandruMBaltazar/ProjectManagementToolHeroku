{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTHeader.js","actions/securityActions.js","components/Layout/Header.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","components/Project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","id","this","props","deleteProject","projectIdentifier","projectName","description","onClick","onDeleteClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","state","get","res","setJWTHeader","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","security","validToken","user","userIsNotAuthenticated","userIsAuthenticated","fullName","data-toggle","data-target","Landing","class","Register","username","password","confirmPassword","errors","onChange","onSubmit","e","setState","target","name","value","preventDefault","newUser","createNewUser","classnames","placeholder","nextProps","Login","prevProps","loginRequest","login","setItem","decoded","jwt_decode","AddProject","start_date","end_date","newProject","initialState","project_tasks","project_task","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","todoItems","inProgressItems","doneItems","tasks","project_tasks_prop","i","length","status","ProjectBoard","displayBoard","projectNotFound","role","getBacklog","AddProjectTask","dueDate","addProjectTask","UpdateProjectTask","created_At","getProjectTask","updateProjectTask","patch","component","otherProps","render","jwtToken","currentTime","Date","now","exp","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f60f16a.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst CreateProjectButton = () => {\n    return (\n        <React.Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                Create a Project\n            </Link>\n        </React.Fragment>\n    )\n}\n\nexport default CreateProjectButton;\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const GET_PROJECTS = 'GET_PROJECTS';\nexport const GET_PROJECT = 'GET_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\n\nexport const GET_BACKLOG = 'GET_BACKLOG';\nexport const GET_PROJECT_TASK = 'GET_PROJECT_TASK';\nexport const DELETE_PROJECT_TASK = 'DELETE_PROJECT_TASK';\n\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';","import axios from 'axios';\nimport {GET_ERRORS, GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from './types';\n\nexport const createProject = (project, history) => async dispatch => {\n    try {\n        await axios.post('/api/project', project);\n\n        history.push('/dashboard');\n\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getProjects = () => async dispatch => {\n\n    const res = await axios.get('/api/project/all');\n\n    dispatch({\n        type: GET_PROJECTS,\n        payload: res.data\n    });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n\n    try {\n        const res = await axios.get(`/api/project/${id}`);\n\n        dispatch({\n            type: GET_PROJECT,\n            payload: res.data\n        }); \n    } catch (error) {\n        history.push('/dashboard');\n    } \n}\n\nexport const deleteProject = id => async dispatch => {\n\n    if (window.confirm(\"Are you sure you want to delete this project ?\")) {\n         const res = await axios.delete(`/api/project/${id}`);\n\n        dispatch({\n            type: DELETE_PROJECT,\n            payload: id\n        }); \n    }\n   \n}\n\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {deleteProject} from '../../actions/projectActions'\n\nclass ProjectItem extends Component {\n\n    onDeleteClick(id) {\n        this.props.deleteProject(id);\n    }\n\n    render() {\n\n        const {project} = this.props;\n\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>{project.projectName}</h3>\n                            <p>{project.description}</p>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                    </li>\n                                </Link>\n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nProjectItem.propTypes= {\n    deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(null, {deleteProject})(ProjectItem);\n","import React, { Component } from 'react'\nimport CreateProjectButton from './Project/CreateProjectButton';\nimport ProjectItem from './Project/ProjectItem';\nimport { connect } from 'react-redux';\nimport { getProjects } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\n\nclass Dashboard extends Component {\n\n    componentDidMount() {\n        this.props.getProjects();\n    }\n\n\n    render() {\n\n        const {projects} = this.props.project;\n\n        return (\n            <div className=\"projects\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Projects</h1>\n                            <br />\n                            <CreateProjectButton />\n                            <br />\n                            <hr />\n                            {projects.map(project => (\n                                <ProjectItem key={project.id} project={project} />\n                            ))\n                            }\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nDashboard.propTypes = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project: state.project\n});\n\nexport default connect(mapStateToProps, {getProjects}) (Dashboard);\n","import axios from 'axios';\n\nconst setJWTHeader = token => {\n\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n\n};\n\nexport default setJWTHeader;","import axios from 'axios';\nimport setJWTHeader from '../securityUtils/setJWTHeader';\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n    try {\n\n        await axios.post('/api/users/register', newUser);\n        history.push(\"/login\");\n\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        })\n\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    }\n\n};\n\nexport const login = loginRequest => async dispatch => {\n\n    try {\n        //Make the login post request \n        const res = await axios.post('/api/users/login', loginRequest);\n\n        //extract the token from the response\n        const {token} = res.data;\n\n        //store the token in the localStorage\n        localStorage.setItem(\"jwtToken\", token);\n\n        //set the token in the headers - important\n        setJWTHeader(token);\n\n        //decode the token to get the payload\n        const decoded = jwt_decode(token); \n\n        //dispatch to the securityReducer\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload: decoded\n        });\n\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    }\n\n};\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n\n    setJWTHeader(false);\n\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n    });\n}","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {logout} from \"../../actions/securityActions\"\n\nclass Header extends Component {\n\n    logout() {\n        this.props.logout();\n        window.location.href=\"/\";\n    }\n\n    render() {\n\n        const {validToken, user} = this.props.security;\n\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/register\">\n                            Sign Up\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\">\n                            Login\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n        \n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            Dashboard\n                        </Link>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            <i className=\"fas fa-user-circle mr-1\"></i>{user.fullName}\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\n                            Logout\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n                <div className=\"container\">\n                    <Link className=\"navbar-brand\" to=\"/\">\n                        Personal Project Management Tool\n                    </Link>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n                    {\n                        validToken && user ? userIsAuthenticated : userIsNotAuthenticated\n                    }\n                </div>\n            </nav>\n        )\n    }\n}\n\nHeader.propTypes = {\n    logout:PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security\n})\n\nexport default connect(mapStateToProps, {logout})(Header);\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Landing extends Component {\n\n    componentDidMount() {\n        if(this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\")\n        }\n    }\n\n    render() {\n        return (\n            <div class=\"landing\">\n                <div class=\"light-overlay landing-inner text-dark\">\n                    <div class=\"container\">\n                        <div class=\"row\">\n                            <div class=\"col-md-12 text-center\">\n                                <h1 class=\"display-3 mb-4\">Personal Project Management Tool</h1>\n                                <p class=\"lead\">\n                                    Create your account to join active projects or start you own\n                                </p>\n                                <hr />\n                                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                                    Sign Up\n                                </Link>\n                                <Link to=\"/login\" class=\"btn btn-lg btn-secondary mr-2\">\n                                    Login\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        </div>\n        )\n    }\n}\n\nLanding.propTypes = {\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security\n})\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from 'react';\nimport {createNewUser} from '../../actions/securityActions';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport {connect} from 'react-redux';\n\n\nclass Register extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            username: \"\",\n            fullName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\")\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.errors) {\n            return ({ errors: nextProps.errors });\n        }\n\n        return null;\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newUser = {\n            username: this.state.username,\n            fullName: this.state.fullName,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n        };\n\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n    render() {\n        const {errors} = this.state;\n\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\"  \n                                        className={classnames(\"form-control form-control-lg\",{\n                                            \"is-invalid\": errors.fullName\n                                        })} \n                                        placeholder=\"Full Name\" name=\"fullName\"\n                                        value={this.state.fullName}\n                                        onChange={this.onChange} \n                                    />\n                                     {errors.fullName && (\n                                         <div className=\"invalid-feedback\">{errors.fullName}</div>\n                                     )}                                    \n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"email\"\n                                        className={classnames(\"form-control form-control-lg\",{\n                                            \"is-invalid\": errors.username\n                                        })}  \n                                        placeholder=\"Email Address(This is your username)\" \n                                        name=\"username\" \n                                        value={this.state.username} \n                                        onChange={this.onChange} \n                                    />\n                                     {errors.username && (\n                                         <div className=\"invalid-feedback\">{errors.username}</div>\n                                     )}              \n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"password\" \n                                        className=\"form-control form-control-lg\" \n                                        placeholder=\"Password\" \n                                        name=\"password\" \n                                        value={this.state.password} \n                                        onChange={this.onChange} \n                                        className={classnames(\"form-control form-control-lg\",{\n                                            \"is-invalid\": errors.password\n                                        })} \n                                    />\n                                     {errors.password && (\n                                         <div className=\"invalid-feedback\">{errors.password}</div>\n                                     )}                                     \n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"password\" \n                                        className=\"form-control form-control-lg\" \n                                        placeholder=\"Confirm Password\"\n                                        name=\"confirmPassword\" \n                                        value={this.state.confirmPassword} \n                                        onChange={this.onChange}\n                                        className={classnames(\"form-control form-control-lg\",{\n                                            \"is-invalid\": errors.confirmPassword\n                                        })}  \n                                    />\n                                     {errors.confirmPassword && (\n                                         <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n                                     )}                                      \n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>    \n        )\n    }\n}\n\nRegister.propTypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, {createNewUser})(Register);\n","import React, { Component } from 'react';\nimport {login} from '../../actions/securityActions';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport {connect} from 'react-redux';\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        }\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\")\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.security.validToken !== prevProps.security.validToken) {\n          this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.errors) {\n            return ({ errors: nextProps.errors });\n        }\n\n        return null;\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    \n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const loginRequest = {\n            username: this.state.username,\n            password: this.state.password\n        };\n\n        this.props.login(loginRequest);\n    }\n\n\n    render() {\n        const {errors} = this.state;\n\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Log In</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"email\" \n                                        placeholder=\"Email Address - Username\" \n                                        name=\"username\" \n                                        value={this.state.username}\n                                        onChange={this.onChange} \n                                        className={classnames(\"form-control form-control-lg\",{\n                                            \"is-invalid\": errors.username\n                                        })}                                         \n                                     />\n                                     {errors.username && (\n                                         <div className=\"invalid-feedback\">{errors.username}</div>\n                                     )}                                     \n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"password\" \n                                        placeholder=\"Password\" \n                                        name=\"password\" \n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                        className={classnames(\"form-control form-control-lg\",{\n                                            \"is-invalid\": errors.password\n                                        })}  \n                                    />\n                                     {errors.password && (\n                                         <div className=\"invalid-feedback\">{errors.password}</div>\n                                     )}                                      \n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n        </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, {login})(Login);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {createProject} from '../../actions/projectActions';\nimport classnames from 'classnames';\n\nclass AddProject extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.errors) {\n            return ({ errors: nextProps.errors });\n        }\n\n        return null;\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newProject = {\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date,\n        };\n\n        this.props.createProject(newProject, this.props.history);    \n    }\n\n    render() {\n        const { errors } = this.state\n        return (\n            <div>\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"text\" \n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.projectName\n                                            })} \n                                            placeholder=\"Project Name\" \n                                            name=\"projectName\" \n                                            value={this.state.projectName} \n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectName && (\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\",{\n                                                \"is-invalid\": errors.projectIdentifier\n                                            })} \n                                            placeholder=\"Unique Project ID\" \n                                            name=\"projectIdentifier\"\n                                            value={this.state.projectIdentifier}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectName && (\n                                            <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n                                        )}\n\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea \n                                            className={classnames(\"form-control form-control-lg\",{\n                                                \"is-invalid\": errors.description\n                                            })}\n                                            placeholder=\"Project Description\" \n                                            name=\"description\"\n                                            value={this.state.description} \n                                            onChange={this.onChange}\n                                        ></textarea>\n                                        {errors.projectName && (\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\n                                        )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"date\" \n                                            className=\"form-control form-control-lg\" \n                                            name=\"start_date\" \n                                            value={this.state.start_date}\n                                            onChange={this.onChange}     \n                                        />\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"date\" \n                                            className=\"form-control form-control-lg\" \n                                            name=\"end_date\" \n                                            value={this.state.end_date}\n                                            onChange={this.onChange}                                \n                                        />\n                                    </div>\n            \n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nAddProject.propTypes = {\n    createProject: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, {createProject}) (AddProject);\n","import {GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"../actions/types\"\n\nconst initialState = {\n    project_tasks: [],\n    project_task: {}\n}\n\nexport default function (state=initialState, action) {\n    switch (action.type) {\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks: action.payload\n            }\n\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            }\n\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks: state.project_tasks.filter(project_task  => project_task.projectSequence !== action.payload)\n            }\n            \n        default:\n            return state;\n    }\n}","import {GET_ERRORS} from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state=initialState, action) {\n    switch(action.type){\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { DELETE_PROJECT, GET_PROJECT, GET_PROJECTS } from '../actions/types';\n\nconst initialState = {\n    projects: [],\n    project: {}\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            }\n        case GET_PROJECT:\n            return {\n                ...state,\n                project: action.payload\n            }\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\n            }\n        default:\n            return state;\n    }\n}\n\n","import {SET_CURRENT_USER} from \"../actions/types\"\n\nconst initialState = {\n    user: {},\n    validToken: false\n}\n\nexport default function(state=initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                validToken: action.payload ? true : false,\n                user: action.payload\n            }\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport backlogReducer from './backlogReducer';\nimport errorReducer from './errorReducer';\nimport projectReducer from './projectReducer';\nimport securityReducer from './securityReducer';\n\nexport default combineReducers ({\n    errors: errorReducer,\n    project: projectReducer,\n    backlog: backlogReducer,\n    security: securityReducer,\n});","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n    store = createStore(\n        rootReducer, \n        initialState, \n        compose(\n            applyMiddleware(...middleware),\n            ReactReduxDevTools\n        ),\n    );\n} else {\n    store = createStore(\n        rootReducer, \n        initialState, \n        compose(applyMiddleware(...middleware))\n    );\n}\n\nexport default store;\n\n","import React, { Component } from 'react';\nimport { getProject, createProject } from '../../actions/projectActions'\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport classnames from 'classnames';\n\nclass UpdateProject extends Component {\n\n    constructor() {\n        super()\n\n        this.state = {\n            id: \"\",\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.getProject(id, this.props.history);\n    }\n\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.errors) {\n            return ({ errors: nextProps.errors });\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.project !== prevProps.project) {\n          this.setState(this.props.project);\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        \n        const updateProject = {\n            ...this.state\n        }\n        \n        this.props.createProject(updateProject, this.props.history);\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div>\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Update Project form</h5>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"text\" \n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.projectName\n                                            })}  \n                                            placeholder=\"Project Name\"\n                                            name=\"projectName\"\n                                            value={this.state.projectName}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectName && (\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"text\" \n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.projectIdentifier\n                                            })}  \n                                            placeholder=\"Unique Project ID\"\n                                            name=\"projectIdentifier\"\n                                            value={this.state.projectIdentifier}                \n                                            disabled \n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea \n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.description\n                                            })}  \n                                            placeholder=\"Project Description\"\n                                            name=\"description\"\n                                            value={this.state.description}\n                                            onChange={this.onChange}\n                \n                                        ></textarea>\n                                        {errors.projectName && (\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\n                                        )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"date\" \n                                            className=\"form-control form-control-lg\" \n                                            value={this.state.start_date} \n                                            onChange={this.onChange}               \n                                            name=\"start_date\" \n                                        />\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"date\" \n                                            className=\"form-control form-control-lg\" \n                                            value={this.state.end_date}\n                                            onChange={this.onChange}                \n                                            name=\"end_date\"                                             \n                                        />\n                                    </div>\n\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nUpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired,\n    createProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    project:state.project.project,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, {getProject, createProject})(UpdateProject);\n","import React, { Component } from 'react';\nimport {deleteProjectTask} from '../../../actions/backlogActions'\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\n\nclass ProjectTask extends Component {\n\n    onDeleteClick(backlog_id, pt_id) {\n        this.props.deleteProjectTask(backlog_id, pt_id);\n    }\n\n    render() {\n        const {project_task} = this.props;\n\n        let priorityString;\n        let priorityClass;\n\n        if (project_task.priority === 1) {\n            priorityClass = \"bg-danger text-light\";\n            priorityString = \"HIGH\";\n        } \n\n        if (project_task.priority === 2) {\n            priorityClass = \"bg-warning text-light\";\n            priorityString = \"MEDIUM\";\n        } \n\n        if (project_task.priority === 3) {\n            priorityClass = \"bg-info text-light\";\n            priorityString = \"LOW\";\n        } \n\n\n        return (\n            <div className=\"card mb-1 bg-light\">\n\n                <div className={`card-header text-primary ${priorityClass}`}>\n                    ID: {project_task.projectSequence} -- Priority: {priorityString}\n                </div>\n                <div className=\"card-body bg-light\">\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\n                    <p className=\"card-text text-truncate \">\n                        {project_task.acceptanceCriteria}\n                    </p>\n                    <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\n                        View / Update\n                    </Link>\n\n                    <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence)}>\n                        Delete\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nProjectTask.propTypes= {\n    deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(null, {deleteProjectTask})(ProjectTask);\n","import axios from 'axios';\nimport { GET_BACKLOG, GET_ERRORS, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from './types';\n\n\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\n\n    try {\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n    \n};\n\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\n\n    try {\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n    \n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\n        dispatch({\n            type: GET_BACKLOG,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\n    try {\n\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n\n        dispatch({\n            type: GET_PROJECT_TASK,\n            payload: res.data\n        });\n\n\n    } catch (err) {\n        history.push(\"/dashboard\");\n    }\n    \n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n\n    if (window.confirm(\"Are you sure you want to delete this project task ?\")) {\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n\n        dispatch({\n            type: DELETE_PROJECT_TASK,\n            payload: pt_id\n        }); \n    }\n   \n}","import React, { Component } from 'react'\nimport ProjectTask from './ProjectTasks/ProjectTask'\n\nclass Backlog extends Component {\n    render() {\n        const {project_tasks_prop} = this.props;\n\n        let todoItems = [];\n        let inProgressItems = [];\n        let doneItems = [];\n\n        const tasks = project_tasks_prop.map(project_task => (\n\n            <ProjectTask key={project_task.id} project_task={project_task} />\n        ))\n\n        for (let i = 0; i < tasks.length; i++) {\n            if (tasks[i].props.project_task.status === \"TO_DO\") {\n                todoItems.push(tasks[i]);\n            }\n\n            if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n                inProgressItems.push(tasks[i]);\n            }\n\n            if (tasks[i].props.project_task.status === \"DONE\") {\n                doneItems.push(tasks[i]);\n            }\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-secondary text-white\">\n                                <h3>TO DO</h3>\n                            </div>\n                        </div>\n                       {todoItems}\n                    </div>\n\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-primary text-white\">\n                                <h3>In Progress</h3>\n                            </div>\n                        </div>\n                        {inProgressItems}\n                    </div>\n\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-success text-white\">\n                                <h3>Done</h3>\n                            </div>\n                        </div>\n                        {doneItems}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Backlog;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Backlog from './Backlog';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            errors: {}\n        }\n    }\n\n\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.errors) {\n            return ({ errors: nextProps.errors });\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const {id} = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n\n    displayBoard = (errors, project_tasks) => {\n        if (project_tasks.length < 1) {\n            if (errors.projectNotFound) {\n                return (\n                    <div className=\"alert alert-danger text-center\" role=\"alert\" >\n                        {errors.projectNotFound}\n                    </div>\n                );\n            } else {\n                return (\n                    <div className=\"alert alert-info text-center\" role=\"alert\" >\n                        No Project Tasks On This Board\n                    </div>\n                );    \n            }\n        } else {\n           return (<Backlog project_tasks_prop = {project_tasks}/>);\n        }\n    };\n\n\n    render() {\n        const {id} = this.props.match.params;\n        const {project_tasks} = this.props.backlog;\n        const {errors} = this.state;\n\n        return (\n            <div className=\"container\">\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n                </Link>\n                <br />\n                <hr />\n                {this.displayBoard(errors, project_tasks)}\n            </div>\n    \n        )\n    }\n}\n\nProjectBoard.propTypes = {\n    backlog: PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n\n  };\n  \n  const mapStateToProps = state => ({\n    backlog: state.backlog,\n    errors: state.errors\n  });\n  \n  export default connect(\n    mapStateToProps,\n    { getBacklog }\n  )(ProjectBoard);\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport classnames from 'classnames';\nimport {addProjectTask} from '../../../actions/backlogActions';\nimport PropTypes from 'prop-types';\n\nclass AddProjectTask extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        const {id} = this.props.match.params;\n\n        this.state = {\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: null,\n            projectIdentifier: id,\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.errors) {\n            return ({ errors: nextProps.errors });\n        }\n\n        return null;\n    }\n\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const project_task = {\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate\n        };\n\n        this.props.addProjectTask(this.state.projectIdentifier, project_task, this.props.history);\n    }\n\n    render() {\n        const {id} = this.props.match.params;\n        const {errors} = this.state;\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\",{\n                                            \"is-invalid\": errors.summary\n                                        })} \n                                        name=\"summary\" \n                                        placeholder=\"Project Task summary\" \n                                        value={this.state.summary}\n                                        onChange={this.onChange}\n                                     />\n                                     {errors.summary && (\n                                         <div className=\"invalid-feedback\">{errors.summary}</div>\n                                     )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea \n                                    className=\"form-control form-control-lg\" \n                                    placeholder=\"Acceptance Criteria\" \n                                    name=\"acceptanceCriteria\"\n                                    value={this.state.acceptanceCriteria}\n                                    onChange={this.onChange}\n                                    >\n\n                                    </textarea>\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"dueDate\" \n                                        value={this.state.dueDate}\n                                        onChange={this.onChange}\n                                     />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select \n                                        className=\"form-control form-control-lg\"\n                                        name=\"priority\"\n                                        value={this.state.priority}\n                                        onChange={this.onChange}\n                                     >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n        \n                                <div className=\"form-group\">\n                                    <select \n                                        className=\"form-control form-control-lg\"\n                                        name=\"status\"\n                                        value={this.state.status}\n                                        onChange={this.onChange}\n                                     >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n        \n                                <input type=\"submit\" class=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nAddProjectTask.propTypes = {\n    addProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, {addProjectTask})(AddProjectTask);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {getProjectTask, updateProjectTask} from '../../../actions/backlogActions';\nimport classnames from 'classnames';\nimport {Link} from 'react-router-dom';\n\n\nclass UpdateProjectTask extends Component {\n\n\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: \"\",\n            dueDate: \"\",\n            projectIdentifier: \"\",\n            created_At: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    componentDidMount() {\n        const { backlog_id, pt_id } = this.props.match.params;\n\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n    }\n\n    componentDidUpdate(prevProps) {\n\n        if (this.props.project_task !== prevProps.project_task) {\n            const {\n                id,\n                projectSequence,\n                summary,\n                acceptanceCriteria,\n                status,\n                priority,\n                dueDate,\n                projectIdentifier,\n                created_At\n            } = this.props.project_task;\n\n            this.setState({\n                id,\n                projectSequence,\n                summary,\n                acceptanceCriteria,\n                status,\n                priority,\n                dueDate,\n                projectIdentifier,\n                created_At\n            });\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.errors) {\n            return ({ errors: nextProps.errors });\n        }\n\n        return null;\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const UpdateProjectTask = {\n            id: this.state.id,\n            projectSequence: this.state.projectSequence,\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate,\n            projectIdentifier: this.state.projectIdentifier,\n            created_At: this.state.created_At\n        };\n\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, UpdateProjectTask, this.props.history); \n    }\n\n    render() {\n        const {backlog_id} = this.props.match.params;\n        const {errors} = this.state;\n\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={`/projectBoard/${backlog_id}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\n                            <p className=\"lead text-center\">\n                                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                                {this.state.projectSequence}{\" \"}\n                            </p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\",{\n                                            \"is-invalid\": errors.summary\n                                        })} \n                                        name=\"summary\" \n                                        placeholder=\"Project Task summary\"     \n                                        value={this.state.summary}\n                                        onChange={this.onChange}                              \n                                    />\n                                    {errors.summary && (\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea \n                                        className=\"form-control form-control-lg\" \n                                        placeholder=\"Acceptance Criteria\" \n                                        name=\"acceptanceCriteria\"\n                                        value={this.state.acceptanceCriteria}\n                                        onChange={this.onChange}\n                                    >\n                                    </textarea>\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"dueDate\" \n                                        value={this.state.dueDate}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control form-control-lg\" \n                                        name=\"priority\"\n                                        value={this.state.priority}\n                                        onChange={this.onChange}\n                                     >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n        \n                                <div className=\"form-group\">\n                                    <select \n                                        className=\"form-control form-control-lg\" \n                                        name=\"status\"\n                                        value={this.state.status}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n        \n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    \n        )\n    }\n}\n\nUpdateProjectTask.propTypes = {\n    getProjectTask: PropTypes.func.isRequired,\n    updateProjectTask: PropTypes.func.isRequired,\n    project_task: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, {getProjectTask, updateProjectTask})(UpdateProjectTask);\n","import React, { Component } from 'react'\nimport {Route, Redirect} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport PropTypes from 'prop-types';\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n    <Route\n      {...otherProps}\n      render={props =>\n        security.validToken === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n  \n  SecuredRoute.propTypes = {\n    security: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    security: state.security\n  });\n  \n  export default connect(mapStateToProps)(SecuredRoute);\n  \n","import './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport AddProject from './components/Project/AddProject';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTHeader from \"./securityUtils/setJWTHeader\";\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from './actions/securityActions';\nimport SecuredRoute from './securityUtils/SecureRoute';\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTHeader(jwtToken);\n\n  const decoded = jwt_decode(jwtToken);\n\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded\n  });\n\n  const currentTime = Date.now()/1000\n\n  if (decoded.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href=\"/\"\n  }\n\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n            <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n            <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n          </div>\n      </Router>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}